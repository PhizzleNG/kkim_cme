<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="robot_namespace" default="/mm_400"/>
	<arg name="manipulator" default="pilz"/>
	<arg name="world_name_global" default="worlds/empty.world"/>
	<arg name="rviz" value="false"/>
	<arg name="scanunifier" value="false"/>
	<arg name="software_joystick" value="true"/>

	<!--Gazebo Variables--> 
	<arg name="world" default="empty"/> 
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>
	
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_name_global)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="headless" value="$(arg headless)"/>
		<arg name="debug" value="$(arg debug)"/>
	</include>

	<group ns="$(arg robot_namespace)">
		<!--Robot description to param server-->
		<param name="robot_description"
		       command="$(find xacro)/xacro.py --inorder
		                robot_namespace:=$(arg robot_namespace)
		                manipulator:=$(arg manipulator)
		                '$(find cme_description)/robots/mm_400/mm_400.urdf.xacro'"/>

		<node name="mm_400_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
			args="-urdf -param robot_description -model mm_400" />
		
		<!--To publish Joint and Robot state-->

		<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
			<param name="publish_frequency" value="20.0"/>
		</node>

		<include file="$(find neo_simulation)/config/controller/launch/controller_utils.launch"/>

		<!-- PILZ -->
		<group if="$(eval manipulator == 'pilz')">
			<rosparam file="$(find cme_control)/config/mm_400/$(arg manipulator)/controller.yaml" command="load"/>
			<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
		</group>

		<!-- Frank Emika - panda -->
		<group if="$(eval manipulator == 'panda')">
			<rosparam file="$(find cme_control)/config/mm_400/controller.yaml" command="load"/>
			<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
		</group>
	
		<!--if arg scan-unifier is set to true-->

		<group if="$(arg scanunifier)">
			<include file="$(find neo_simulation)/config/mm_400/scan_unifier/mm_400_scan_unifier.launch"/>
		</group>	 
	</group>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find cme_launch)/rviz/test_mm_400.rviz" />

</launch>
