<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="scanunifier" value="false"/>
	<arg name="software_joystick" value="true"/>
	<arg name="manipulator" value="panda"/>

	<!--Robot description to param server-->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find neo_simulation)/robots/mm_400/mm_400.urdf.xacro'"/>

	<node name="mm_400_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
	      args="-urdf -param robot_description -model mm_400" />

	<!--To publish Joint and Robot state-->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
		<param name="publish_frequency" value="20.0"/>
	</node>

	<include file="$(find neo_simulation)/config/controller/launch/controller_utils.launch"/>

	<!-- PILZ -->
	<group if="$(eval manipulator == 'pilz')">
		<rosparam file="$(find neo_simulation)/config/controller/arm_controller_pilz.yaml" command="load"/>
		<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
	</group>

	<!-- Frank Emika - panda -->
	<group if="$(eval manipulator == 'panda')">
		<rosparam file="$(find neo_simulation)/config/controller/arm_controller_franka.yaml" command="load"/>
		<node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>
	</group>
 
	<group if="$(arg scanunifier)">
		<include file="$(find neo_simulation)/config/mm_400/scan_unifier/mm_400_scan_unifier.launch"/>
	</group>	 

	<group if="$(arg software_joystick)">
		<node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_keyboard"	output="screen">
		</node>
	</group>

</launch>
